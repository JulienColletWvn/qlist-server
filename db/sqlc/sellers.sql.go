// Code generated by sqlc. DO NOT EDIT.
// source: sellers.sql

package db

import (
	"context"
)

const createSeller = `-- name: CreateSeller :one
INSERT INTO sellers (
  users_id, events_id
) VALUES (
  $1, $2
)
RETURNING id, created_at, users_id, events_id
`

type CreateSellerParams struct {
	UsersID  int32 `json:"users_id"`
	EventsID int32 `json:"events_id"`
}

func (q *Queries) CreateSeller(ctx context.Context, arg CreateSellerParams) (Seller, error) {
	row := q.db.QueryRowContext(ctx, createSeller, arg.UsersID, arg.EventsID)
	var i Seller
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UsersID,
		&i.EventsID,
	)
	return i, err
}

const deleteSeller = `-- name: DeleteSeller :exec
DELETE FROM sellers
WHERE id = $1
`

func (q *Queries) DeleteSeller(ctx context.Context, id int32) error {
	_, err := q.db.ExecContext(ctx, deleteSeller, id)
	return err
}
